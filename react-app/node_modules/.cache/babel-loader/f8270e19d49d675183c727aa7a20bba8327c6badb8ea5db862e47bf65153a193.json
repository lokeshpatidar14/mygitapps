{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lokes\\\\Desktop\\\\Working React App\\\\coaching react programs\\\\calc-app\\\\react-app\\\\src\\\\MyContext\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case 'SET_CART_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst baseURL = 'https://crudcrud.com/api/2c44a8fd9efd43298949ffc93552d80e';\nconst addToCartAPI = item => {\n  fetch(`${baseURL}/cart`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  }).then(response => response.json()).then(data => console.log('Item added to cart:', data)).catch(error => console.error('Error adding item to cart:', error));\n};\nconst removeFromCartAPI = itemId => {\n  fetch(`${baseURL}/cart/${itemId}`, {\n    method: 'DELETE'\n  }).then(response => response.json()).then(data => console.log('Item removed from cart:', data)).catch(error => console.error('Error removing item from cart:', error));\n};\nconst fetchCartItemsAPI = dispatch => {\n  fetch(`${baseURL}/cart`).then(response => response.json()).then(data => dispatch({\n    type: 'SET_CART_ITEMS',\n    payload: data\n  })).catch(error => console.error('Error fetching cart items:', error));\n};\nconst initialCartState = {\n  items: []\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\n  React.useEffect(() => {\n    fetchCartItemsAPI(dispatch);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"7eob9ayRkcMKf+PbBhKx/jFHPLo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","filter","item","id","baseURL","addToCartAPI","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","removeFromCartAPI","itemId","fetchCartItemsAPI","dispatch","initialCartState","CartProvider","children","_s","useEffect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/lokes/Desktop/Working React App/coaching react programs/calc-app/react-app/src/MyContext/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n      };\r\n    case 'SET_CART_ITEMS':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst baseURL = 'https://crudcrud.com/api/2c44a8fd9efd43298949ffc93552d80e';\r\n\r\nconst addToCartAPI = (item) => {\r\n  fetch(`${baseURL}/cart`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(item),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => console.log('Item added to cart:', data))\r\n    .catch((error) => console.error('Error adding item to cart:', error));\r\n};\r\n\r\nconst removeFromCartAPI = (itemId) => {\r\n  fetch(`${baseURL}/cart/${itemId}`, {\r\n    method: 'DELETE',\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => console.log('Item removed from cart:', data))\r\n    .catch((error) => console.error('Error removing item from cart:', error));\r\n};\r\n\r\nconst fetchCartItemsAPI = (dispatch) => {\r\n  fetch(`${baseURL}/cart`)\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch({ type: 'SET_CART_ITEMS', payload: data }))\r\n    .catch((error) => console.error('Error fetching cart items:', error));\r\n};\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\r\n\r\n  React.useEffect(() => {\r\n    fetchCartItemsAPI(dispatch);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}