{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lokes\\\\Desktop\\\\Working React App\\\\coaching react programs\\\\calc-app\\\\react-app\\\\src\\\\MyContext\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CART_ITEMS\":\n      return {\n        ...state,\n        items: action.payload\n      };\n    case \"ADD_TO_CART\":\n      const existingItemIndex = state.items.findIndex(item => item._id === action.payload._id);\n      if (existingItemIndex !== -1) {\n        const updatedItems = [...state.items];\n        updatedItems[existingItemIndex].quantity += 1;\n        return {\n          ...state,\n          items: updatedItems\n        };\n      } else {\n        return {\n          ...state,\n          items: [...state.items, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nconst baseURL = \"https://crudcrud.com/api/5f0563d348594097a6cfd337e9f9fa77\";\nconst fetchCartItems = async dispatch => {\n  try {\n    const response = await fetch(`${baseURL}/cart`);\n    const data = await response.json();\n    dispatch({\n      type: \"SET_CART_ITEMS\",\n      payload: data\n    });\n  } catch (error) {\n    console.error(\"Error fetching cart items:\", error);\n  }\n};\nconst addToCartAPI = async (item, dispatch) => {\n  try {\n    const response = await fetch(`${baseURL}/cart`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    });\n    const data = await response.json();\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: data\n    });\n  } catch (error) {\n    console.error(\"Error adding item to cart:\", error);\n  }\n};\nconst removeFromCartAPI = async (itemId, dispatch) => {\n  try {\n    await fetch(`${baseURL}/cart/${itemId}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: \"REMOVE_FROM_CART\",\n      payload: itemId\n    });\n  } catch (error) {\n    console.error(\"Error removing item from cart:\", error);\n  }\n};\nconst initialCartState = {\n  items: []\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\n  useEffect(() => {\n    fetchCartItems(dispatch);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      addToCartAPI,\n      removeFromCartAPI\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"7eob9ayRkcMKf+PbBhKx/jFHPLo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","existingItemIndex","findIndex","item","_id","updatedItems","quantity","filter","baseURL","fetchCartItems","dispatch","response","fetch","data","json","error","console","addToCartAPI","method","headers","body","JSON","stringify","removeFromCartAPI","itemId","initialCartState","CartProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/lokes/Desktop/Working React App/coaching react programs/calc-app/react-app/src/MyContext/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CART_ITEMS\":\r\n      return { ...state, items: action.payload };\r\n    case \"ADD_TO_CART\":\r\n      const existingItemIndex = state.items.findIndex(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n      if (existingItemIndex !== -1) {\r\n        const updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex].quantity += 1;\r\n        return { ...state, items: updatedItems };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          items: [...state.items, { ...action.payload, quantity: 1 }],\r\n        };\r\n      }\r\n    case \"REMOVE_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst baseURL = \"https://crudcrud.com/api/5f0563d348594097a6cfd337e9f9fa77\";\r\n\r\nconst fetchCartItems = async (dispatch) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}/cart`);\r\n    const data = await response.json();\r\n    dispatch({ type: \"SET_CART_ITEMS\", payload: data });\r\n  } catch (error) {\r\n    console.error(\"Error fetching cart items:\", error);\r\n  }\r\n};\r\n\r\nconst addToCartAPI = async (item, dispatch) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}/cart`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    const data = await response.json();\r\n    dispatch({ type: \"ADD_TO_CART\", payload: data });\r\n  } catch (error) {\r\n    console.error(\"Error adding item to cart:\", error);\r\n  }\r\n};\r\n\r\nconst removeFromCartAPI = async (itemId, dispatch) => {\r\n  try {\r\n    await fetch(`${baseURL}/cart/${itemId}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    dispatch({ type: \"REMOVE_FROM_CART\", payload: itemId });\r\n  } catch (error) {\r\n    console.error(\"Error removing item from cart:\", error);\r\n  }\r\n};\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\r\n\r\n  useEffect(() => {\r\n    fetchCartItems(dispatch);\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ state, dispatch, addToCartAPI, removeFromCartAPI }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}